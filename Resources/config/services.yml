parameters:


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Yosimitso\WorkingForumBundle\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Migrations,Tests,Subscription/Subscriber,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Yosimitso\WorkingForumBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    Yosimitso\WorkingForumBundle\Event\Handler\SlugableEvent:
        tags:
            - { name: doctrine.event_listener, event: prePersist}

    Yosimitso\WorkingForumBundle\Event\Handler\ThreadAutolockEvent:
        arguments:
            $lockThreadOlderThan: '%yosimitso_working_forum.lock_thread_older_than%'
        tags:
            - { name: doctrine.event_listener, event: postLoad}

    Yosimitso\WorkingForumBundle\Security\ExpressionLanguageProvider:
        tags: ['security.expression_language_provider']

#    Yosimitso\WorkingForumBundle\Subscription\Subscriber\EmailSubscriber: ~

